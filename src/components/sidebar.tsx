import { Routes } from '@/constants/routes'
import { cn } from '@/lib/utils'
import Image from 'next/image'
import Link from 'next/link'
import { useRouter } from 'next/router'
import React from 'react'
import { SlArrowDown, SlArrowUp } from 'react-icons/sl'

export default function Sidebar() {
  const router = useRouter()
  console.log(router.pathname)

  interface Routes {
    name: string
    route?: string
    subRoutes?: Omit<Routes, 'subRoutes'>[]
  }

  const routes: Routes[] = [
    { name: 'Dashboard', route: Routes.Dashboard },
    { name: 'Users', route: Routes.Users },
    {
      name: 'Transactions',
      subRoutes: [
        { name: 'Deposit', route: Routes.Deposit },
        { name: 'Send', route: Routes.Send },
        { name: 'Swap', route: Routes.Swap },
        { name: 'Withdrawal', route: Routes.Withdrawal },
      ],
    },
    { name: 'Card', route: Routes.Card },
    { name: 'KYC', route: Routes.Kyc },
    { name: 'Fee Management', route: Routes.FeeManagement },
    { name: 'Settings', route: Routes.Settings },
  ]

  const joinString = (name: string) => name.split(' ').join('-').toLowerCase()

  return (
    <aside className="hidden h-full w-[300px] border-r border-gray-200 bg-white py-6 xl:block">
      <div className="px-9">
        <svg
          width="163"
          height="36"
          viewBox="0 0 163 36"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M50.0452 15.3398C50.0452 16.4784 49.7839 17.5236 49.2612 18.4756C48.7386 19.4088 47.936 20.1648 46.8534 20.7434C45.7709 21.322 44.427 21.6113 42.8218 21.6113H39.854V28.6667H35.0664V9.01236H42.8218C44.3896 9.01236 45.7149 9.283 46.7974 9.82429C47.88 10.3656 48.6919 11.1122 49.2332 12.0641C49.7745 13.016 50.0452 14.1079 50.0452 15.3398ZM42.4578 17.8036C43.3724 17.8036 44.0537 17.589 44.5016 17.1597C44.9496 16.7304 45.1736 16.1238 45.1736 15.3398C45.1736 14.5559 44.9496 13.9493 44.5016 13.52C44.0537 13.0907 43.3724 12.876 42.4578 12.876H39.854V17.8036H42.4578ZM50.1858 20.8274C50.1858 19.2222 50.4845 17.813 51.0817 16.5997C51.6977 15.3865 52.5283 14.4532 53.5735 13.8C54.6188 13.1467 55.7853 12.82 57.0732 12.82C58.1745 12.82 59.1357 13.044 59.957 13.492C60.7969 13.9399 61.4409 14.5279 61.8888 15.2558V13.044H66.6764V28.6667H61.8888V26.4549C61.4222 27.1828 60.7689 27.7708 59.929 28.2188C59.1077 28.6667 58.1465 28.8907 57.0452 28.8907C55.776 28.8907 54.6188 28.5641 53.5735 27.9108C52.5283 27.2388 51.6977 26.2962 51.0817 25.083C50.4845 23.8511 50.1858 22.4326 50.1858 20.8274ZM61.8888 20.8554C61.8888 19.6608 61.5529 18.7182 60.8809 18.0276C60.2276 17.337 59.425 16.9917 58.4731 16.9917C57.5212 16.9917 56.7093 17.337 56.0373 18.0276C55.384 18.6996 55.0574 19.6328 55.0574 20.8274C55.0574 22.0219 55.384 22.9739 56.0373 23.6831C56.7093 24.3737 57.5212 24.719 58.4731 24.719C59.425 24.719 60.2276 24.3737 60.8809 23.6831C61.5529 22.9925 61.8888 22.0499 61.8888 20.8554ZM73.5278 7.94845V28.6667H68.7402V7.94845H73.5278ZM85.6206 28.6667L81.5329 21.2473H80.385V28.6667H75.5974V9.01236H83.6327C85.1819 9.01236 86.4978 9.283 87.5804 9.82429C88.6816 10.3656 89.5029 11.1122 90.0442 12.0641C90.5855 12.9974 90.8561 14.0426 90.8561 15.1998C90.8561 16.5064 90.4828 17.673 89.7362 18.6996C89.0083 19.7261 87.9257 20.4541 86.4885 20.8834L91.0241 28.6667H85.6206ZM80.385 17.8596H83.3528C84.23 17.8596 84.8833 17.645 85.3126 17.2157C85.7606 16.7864 85.9845 16.1798 85.9845 15.3958C85.9845 14.6492 85.7606 14.0613 85.3126 13.632C84.8833 13.2027 84.23 12.988 83.3528 12.988H80.385V17.8596ZM107.188 20.6034C107.188 21.0514 107.16 21.518 107.104 22.0033H96.2693C96.344 22.9739 96.6519 23.7205 97.1932 24.2431C97.7532 24.747 98.4345 24.999 99.2371 24.999C100.432 24.999 101.262 24.4951 101.729 23.4872H106.824C106.563 24.5137 106.087 25.4377 105.397 26.2589C104.725 27.0802 103.875 27.7241 102.849 28.1908C101.822 28.6574 100.674 28.8907 99.405 28.8907C97.8745 28.8907 96.512 28.5641 95.3174 27.9108C94.1228 27.2575 93.1896 26.3242 92.5176 25.111C91.8457 23.8978 91.5097 22.4792 91.5097 20.8554C91.5097 19.2315 91.8363 17.813 92.4896 16.5997C93.1616 15.3865 94.0948 14.4532 95.2894 13.8C96.484 13.1467 97.8558 12.82 99.405 12.82C100.917 12.82 102.261 13.1373 103.437 13.772C104.613 14.4066 105.527 15.3118 106.18 16.4877C106.852 17.6636 107.188 19.0355 107.188 20.6034ZM102.289 19.3435C102.289 18.5222 102.009 17.869 101.449 17.3837C100.889 16.8984 100.189 16.6557 99.349 16.6557C98.5464 16.6557 97.8652 16.889 97.3052 17.3557C96.7639 17.8223 96.428 18.4849 96.2973 19.3435H102.289ZM128.249 12.876C130.19 12.876 131.73 13.464 132.868 14.6399C134.025 15.8158 134.604 17.449 134.604 19.5395V28.6667H129.844V20.1834C129.844 19.1755 129.574 18.4009 129.032 17.8596C128.51 17.2997 127.782 17.0197 126.849 17.0197C125.915 17.0197 125.178 17.2997 124.637 17.8596C124.114 18.4009 123.853 19.1755 123.853 20.1834V28.6667H119.093V20.1834C119.093 19.1755 118.823 18.4009 118.281 17.8596C117.759 17.2997 117.031 17.0197 116.098 17.0197C115.164 17.0197 114.427 17.2997 113.886 17.8596C113.363 18.4009 113.102 19.1755 113.102 20.1834V28.6667H108.314V13.044H113.102V15.0039C113.587 14.3506 114.222 13.8373 115.006 13.464C115.79 13.072 116.676 12.876 117.665 12.876C118.841 12.876 119.887 13.128 120.801 13.632C121.734 14.1359 122.462 14.8545 122.985 15.7878C123.526 14.9292 124.264 14.2293 125.197 13.688C126.13 13.1467 127.147 12.876 128.249 12.876ZM138.96 11.4202C138.12 11.4202 137.43 11.1775 136.888 10.6922C136.366 10.1883 136.105 9.57231 136.105 8.84437C136.105 8.09777 136.366 7.48182 136.888 6.99653C137.43 6.49257 138.12 6.24059 138.96 6.24059C139.782 6.24059 140.453 6.49257 140.976 6.99653C141.517 7.48182 141.788 8.09777 141.788 8.84437C141.788 9.57231 141.517 10.1883 140.976 10.6922C140.453 11.1775 139.782 11.4202 138.96 11.4202ZM141.34 13.044V28.6667H136.552V13.044H141.34ZM152.117 24.6071V28.6667H149.681C147.945 28.6667 146.592 28.2468 145.622 27.4068C144.651 26.5482 144.166 25.1577 144.166 23.2352V17.0197H142.262V13.044H144.166V9.23634H148.953V13.044H152.089V17.0197H148.953V23.2912C148.953 23.7578 149.065 24.0938 149.289 24.2991C149.513 24.5044 149.886 24.6071 150.409 24.6071H152.117Z"
            fill="#074842"
          />
          <path
            d="M7.46606 23.2648C7.46606 24.7375 8.65987 25.9313 10.1325 25.9313H16.532C22.128 25.9313 26.6645 21.3948 26.6645 15.7988C26.6645 10.2028 22.128 5.66629 16.532 5.66629H10.1325C8.65987 5.66629 7.46606 6.8601 7.46606 8.33273C7.46606 9.80537 8.65987 10.9992 10.1325 10.9992H16.532C19.1827 10.9992 21.3316 13.148 21.3316 15.7988C21.3316 18.4495 19.1827 20.5984 16.532 20.5984H10.1325C8.65987 20.5984 7.46606 21.7922 7.46606 23.2648Z"
            fill="#BFA600"
          />
          <path
            d="M9.5992 13.1325H16.5319C18.0046 13.1325 19.1984 14.3263 19.1984 15.7989C19.1984 17.2716 18.0046 18.4654 16.5319 18.4654H9.5992C7.24298 18.4654 5.33289 20.3755 5.33289 22.7317V28.0646C5.33289 30.4208 3.42279 32.3309 1.06658 32.3309H0V22.7317C0 17.4302 4.29771 13.1325 9.5992 13.1325Z"
            fill="#D1B725"
          />
          <path
            d="M155.652 10.346V6.32791H157.579C157.782 6.32791 157.978 6.37691 158.167 6.47492C158.359 6.56929 158.517 6.71085 158.641 6.8996C158.768 7.08471 158.831 7.31339 158.831 7.58562C158.831 7.85785 158.766 8.09378 158.635 8.29342C158.508 8.48943 158.345 8.64006 158.145 8.74532C157.949 8.85059 157.746 8.90322 157.535 8.90322H156.044V8.35331H157.35C157.535 8.35331 157.701 8.28797 157.846 8.1573C157.995 8.023 158.069 7.83244 158.069 7.58562C158.069 7.33154 157.995 7.15005 157.846 7.04116C157.701 6.93226 157.541 6.87782 157.367 6.87782H156.354V10.346H155.652ZM157.993 8.47854L158.995 10.346H158.211L157.236 8.47854H157.993ZM157.127 12.7417C156.524 12.7417 155.96 12.6292 155.434 12.4041C154.907 12.1791 154.445 11.8669 154.045 11.4676C153.646 11.0684 153.334 10.6056 153.109 10.0793C152.884 9.55294 152.771 8.98852 152.771 8.38598C152.771 7.78344 152.884 7.21901 153.109 6.6927C153.334 6.16639 153.646 5.70359 154.045 5.30432C154.445 4.90505 154.907 4.59289 155.434 4.36785C155.96 4.1428 156.524 4.03028 157.127 4.03028C157.73 4.03028 158.294 4.1428 158.82 4.36785C159.347 4.59289 159.809 4.90505 160.209 5.30432C160.608 5.70359 160.92 6.16639 161.145 6.6927C161.37 7.21901 161.483 7.78344 161.483 8.38598C161.483 8.98852 161.37 9.55294 161.145 10.0793C160.92 10.6056 160.608 11.0684 160.209 11.4676C159.809 11.8669 159.347 12.1791 158.82 12.4041C158.294 12.6292 157.73 12.7417 157.127 12.7417ZM157.127 11.9304C157.78 11.9304 158.374 11.7707 158.907 11.4513C159.445 11.1319 159.873 10.7054 160.192 10.1718C160.512 9.63461 160.671 9.03933 160.671 8.38598C160.671 7.73262 160.512 7.13916 160.192 6.60559C159.873 6.06838 159.445 5.64007 158.907 5.32066C158.374 5.00124 157.78 4.84153 157.127 4.84153C156.474 4.84153 155.878 5.00124 155.341 5.32066C154.808 5.64007 154.381 6.06838 154.062 6.60559C153.742 7.13916 153.583 7.73262 153.583 8.38598C153.583 9.03933 153.742 9.63461 154.062 10.1718C154.381 10.7054 154.808 11.1319 155.341 11.4513C155.878 11.7707 156.474 11.9304 157.127 11.9304Z"
            fill="#9FB7B4"
          />
        </svg>
      </div>
      <div className="mt-14">
        <div className="w-full">
          {routes.map(({ name, route, subRoutes }, index) => {
            let isOpen = false
            const toggleOpen = () => (isOpen = !isOpen)
            const Wrapper = ({
              href,
              children,
            }: {
              href?: string
              children: JSX.Element
            }) =>
              href ? (
                <Link href={href}>{children}</Link>
              ) : (
                <div
                  onClick={() => {
                    toggleOpen()
                    console.log(isOpen)
                  }}
                >
                  {children}
                </div>
              )
            return (
              <div className="mb-2 w-full">
                <Wrapper href={route} key={index}>
                  <div
                    className={cn(
                      'group flex w-full items-center justify-between px-9 py-4 text-base font-medium text-neutral-500 transition-all duration-150 hover:bg-[#F8F3AF] hover:text-primary',
                      router.pathname === route && 'bg-[#F8F3AF]'
                    )}
                  >
                    <div className="flex items-center space-x-3">
                      <div>
                        <Image
                          src={`/assets/svg/sidebar-icons/${joinString(name)}.svg`}
                          alt={name}
                          height={20}
                          width={20}
                          style={{ color: 'red' }}
                        />
                      </div>
                      <div>{name}</div>
                    </div>
                    {subRoutes && (
                      <div>{isOpen ? <SlArrowUp /> : <SlArrowDown />}</div>
                    )}
                  </div>
                </Wrapper>
                {subRoutes && (
                  <div
                    style={{ height: `${48 * subRoutes.length}px` }}
                    className="transition-all duration-150"
                  >
                    {subRoutes.map(({ name, route }, index) => (
                      <Wrapper key={index} href={route}>
                        <div
                          className={cn(
                            'group flex h-12 w-full items-center justify-between pl-[72px] pr-9 text-base font-medium text-neutral-500 transition-all duration-150 hover:bg-[#F8F3AF] hover:text-primary',
                            router.pathname === route && 'bg-[#F8F3AF]'
                          )}
                        >
                          <div>{name}</div>
                        </div>
                      </Wrapper>
                    ))}
                  </div>
                )}
              </div>
            )
          })}
        </div>
      </div>
    </aside>
  )
}
